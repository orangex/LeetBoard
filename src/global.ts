import p5 = require("p5");
import { BaseElement } from "./drawable";

let scribbling = false;
let lastElementID = 0;
/* Palette generated by Material Palette _ materialpalette.com/blue_grey/teal */

export const dark_primary_color    = '#00363a';
export const default_primary_color = '#006064';
export const light_primary_color   = '#428e92';

export const dark_secondary_color    = '#002f6c';
export const default_secondary_color = '#01579b';
export const light_secondary_color   = '#4f83cc';

export const accent_color          = '#0000ff';
export const accent_secondary_color ='#0000ff';

export const light_primary_text_color    ='#FFFFFF';
export const dark_primary_text_color ='#212121'; 
export const accent_text_color       ='#009688'; 
export const secondary_text_color  ='#757575';
export const divider_color         ='#BDBDBD';

export const md500_red='#d50000b0';
export const md500_green='#00c853b0';
export const md500_amber='#ffab00b0';


export  interface Board {
    pInst:p5;
    elements:Array<BaseElement>
    actionStack :Array<Function>,
    elementHovering:BaseElement,//node and link
//  lastLinkID = 0,
//  elementGroups = [],
//  links = [],//link 的两端可以是 Node，也可以是坐标。
//  mousePos,
//  linkConnecting,
//  elementDragging,//node
//  mouseToElementAnchor, //开始拖动 Node 时，指针与 Node 中心的偏移量，此后拖动时 Node 就在指针的位置上加上该偏移量就行。
//  elementEditing,//node and link 

//  elementsSelected = new Set(),
//  dock:p5.Element,
//  scribbledock,
//  mainSketch,
//  scribbleSketch,
//  canvas,
// 正在插入的元素类型
//  inserting:string,
//  insertingSVG: p5.Element,
//  insertingUse: p5.Element,
//  mainSketchHolder: p5.Element,
//  modeScribbling=false
}